@using System
@using GeniusSports.Signalr.Hubs.TypeScriptGenerator.Models
@model GeniusSports.Signalr.Hubs.TypeScriptGenerator.Models.TypesModel

@helper WriteDeprecatedComment(MemberInfo memberInfo, int indent)
{
	if (memberInfo.IsDeprecated)
	{
		var tabs = new string('\t', indent);
		var deprecatedLine = tabs + " * @deprecated";
		if (!string.IsNullOrEmpty(memberInfo.ReasonDeprecated))
		{
			deprecatedLine += " " + memberInfo.ReasonDeprecated;
		}
<text>@Raw(tabs)/*
@Raw(@deprecatedLine)
@Raw(tabs) */</text>
	}
}
//------------------------------------------------------------------------------
// <auto-generated>
//
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//
// https://github.com/geniussportsgroup/Signalr.Hubs.TypeScriptGenerator
//
// </auto-generated>
//------------------------------------------------------------------------------

// Enums
@foreach (var grouping in Model.Enums.GroupBy(x => x.ModuleName))
{
<text>
export module @grouping.Key {
@foreach (EnumInfo enumInfo in grouping) {
	@WriteDeprecatedComment(enumInfo, 1)
	<text>export enum @enumInfo.Name {
	@foreach (var enumMember in enumInfo.Members) {
		@WriteDeprecatedComment(enumMember, 2)
		<text>@Raw(enumMember.Name) = @Raw(enumMember.Value.ToString()),</text>
	}
	}
</text>
}
}</text>
}